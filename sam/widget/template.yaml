AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  widget app

  Widget API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Environment:
          Variables:
            DYNAMODB: "http://192.168.1.245:8009"

Resources:
  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.9
      ContentUri: ./flex
      Description: Provides the base backend shared library and dependencies
      LayerName: shared-layer

  WidgetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: widget/
      Handler: app.lambda_handler
      Layers:
        - !Ref SharedLayer
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        Widget:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /widget
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WidgetApi:
    Description: "API Gateway endpoint URL for Prod stage for Widget function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/widget/"
  WidgetFunction:
    Description: "Widget  Lambda Function ARN"
    Value: !GetAtt WidgetFunction.Arn
  WidgetFunctionIamRole:
    Description: "Implicit IAM Role created for Widget function"
    Value: !GetAtt WidgetFunctionRole.Arn
